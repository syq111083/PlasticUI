<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Plastic">


    <SolidColorBrush x:Key="borderBrush" Color="#FF375E85" />
    <SolidColorBrush x:Key="backGround" Color="#0d6efd"/>
    <SolidColorBrush x:Key="backGround1" Color="#0b5ed7"/>
    <SolidColorBrush x:Key="backGround2" Color="#FF4E87B9"/>
    <SolidColorBrush x:Key="blueBorder" Color="#E5C2DBFE" />
    <SolidColorBrush x:Key="outBorder" Color="#FCC2DBFE"/>
    <SolidColorBrush x:Key="pressed" Color="#FF375E81"/>
    <SolidColorBrush x:Key="primary" Color="#0d6efd"/>
    <SolidColorBrush x:Key="secondary" Color="#6c757d"/>
    <SolidColorBrush x:Key="success" Color="#198754"/>
    <SolidColorBrush x:Key="danger" Color="#dc3545"/>
    <SolidColorBrush x:Key="warning" Color="#ffc107"/>
    <SolidColorBrush x:Key="info" Color="#0dcaf0"/>
    <SolidColorBrush x:Key="light" Color="#f8f9fa"/>
    <SolidColorBrush x:Key="dark" Color="#212529"/>
    <SolidColorBrush x:Key="placeHolder" Color="#595c5f"/>
    <Geometry x:Key="down">
        M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z
    </Geometry>

    <FontFamily x:Key="fontFamily" >
        microsoft junhei ui
    </FontFamily>
    <Style TargetType="{x:Type local:Button}">
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Background" Value="{StaticResource backGround}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{StaticResource fontFamily}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Content" Value="圆角按钮"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Height" Value="45.3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Border CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}"
                            Margin="3"
                            Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="6,3"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Theme" Value="Secondary">
                <Setter Property="Background" Value="#6c757d"/>
            </Trigger>
            <Trigger Property="Theme" Value="Success">
                <Setter Property="Background" Value="#198754"/>
            </Trigger>
            <Trigger Property="Theme" Value="Danger">
                <Setter Property="Background" Value="#dc3545"/>
            </Trigger>
            <Trigger Property="Theme" Value="Warning">
                <Setter Property="Background" Value="#ffc107"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="Theme" Value="Info">
                <Setter Property="Background" Value="#0dcaf0"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="Theme" Value="Light">
                <Setter Property="Background" Value="#f8f9fa"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="Theme" Value="Dark">
                <Setter Property="Background" Value="#212529"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Primary"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#0b5ed7" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Secondary"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#5c636a" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.2"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Success"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#157347" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Danger"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#bb2d3b" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Warning"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#ffca2c" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Info"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#31d2f2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Light"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#d3d4d5" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Theme" Value="Dark"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#424649" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3"  />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Primary" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#0a58ca" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Secondary" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#565e64" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Success"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#146c43" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Danger"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#b02a37" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Warning" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#ffcd39" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Info" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#3dd5f3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Light" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#c6c7c8" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Theme" Value="Dark" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="#4d5154" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:OutlineButton}">
        <Setter Property="BorderBrush" Value="#0d6efd"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{StaticResource fontFamily}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Height" Value="45.3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="normal"/>
                                <VisualState x:Name="prime">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#0d6efd"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="secondary">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#6c757d"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="success">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#198754"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="danger">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#dc3545"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="warning">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#ffc107"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="Black"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="info">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#0dcaf0"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="light">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#f8f9fa"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="Black"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="dark">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#212529"/>
                                        <ColorAnimation Duration="0:0:0.2" 
                                                        Storyboard.TargetName="content"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="White"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.6"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="6"
                                Background="{TemplateBinding Background}"
                                Margin="3"
                                Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Name="content"
                                                  Margin="6,3"
                                                  RecognizesAccessKey="True"
                                                  TextElement.Foreground="{TemplateBinding BorderBrush}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" >
                                </ContentPresenter>

                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Theme" Value="Secondary">
                <Setter Property="BorderBrush" Value="{StaticResource secondary}" />
            </Trigger>
            <Trigger Property="Theme" Value="Primary">
                <Setter Property="BorderBrush" Value="{StaticResource primary}" />
            </Trigger>
            <Trigger Property="Theme" Value="Danger">
                <Setter Property="BorderBrush" Value="{StaticResource danger}" />
            </Trigger>
            <Trigger Property="Theme" Value="Dark">
                <Setter Property="BorderBrush" Value="{StaticResource dark}" />
            </Trigger>
            <Trigger Property="Theme" Value="Info">
                <Setter Property="BorderBrush" Value="{StaticResource info}" />
            </Trigger>
            <Trigger Property="Theme" Value="Success">
                <Setter Property="BorderBrush" Value="{StaticResource success}" />
            </Trigger>
            <Trigger Property="Theme" Value="Warning">
                <Setter Property="BorderBrush" Value="{StaticResource warning}" />
            </Trigger>
            <Trigger Property="Theme" Value="Light">
                <Setter Property="BorderBrush" Value="{StaticResource light}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="prefix">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#f8f9fa"/>
        <Setter Property="BorderBrush" Value="#dee2e6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="45.3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="6,0,0,6"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="5" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="12,0"
                                          Content="{TemplateBinding Content}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.TextAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="Label" x:Key="suffixLabel">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Height="{TemplateBinding Height}"
                CornerRadius="0,6,6,0"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Border.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="-5" />
                </TransformGroup>
            </Border.RenderTransform>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="12,0"
                                          Content="{TemplateBinding Content}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.TextAlignment="Center"
                                          RecognizesAccessKey="True" />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type local:Input}">
        <Setter Property="BorderBrush" Value="#e6e9ec" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Height" Value="45.3"/>-->
        <Setter Property="Height" Value="58"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FloatingLabel" Value="False"/>
        <Setter Property="Prefix" Value="False"/>
        <Setter Property="PrefixContent" Value="前缀"/>
        <Setter Property="Suffix" Value="False"/>
        <Setter Property="SuffixContent" Value="后缀"/>
        <Setter Property="PlaceHolder" Value="请输入"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Input}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" 
                                                         To="0.9"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="out_border"/>
                                        <ColorAnimation Duration="0:0:0.3" 
                                                        To="#FCC2DBFE"
                                                        Storyboard.TargetName="out_border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:0.3" 
                                                        To="#86b7fe"
                                                        Storyboard.TargetName="inner_border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" 
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="out_border"/>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="Transparent" 
                                                        Storyboard.TargetName="out_border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="WithoutText">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.1"
                                                            To="14,0"
                                                            Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="tb0"/>
                                        <ThicknessAnimation Duration="0:0:0.1"
                                                            To="12,0" 
                                                            Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="PART_ContentHost"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="WithText">
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <ThicknessAnimation Duration="0:0:0.2"
                                                            To="14,0,0,16" 
                                                            Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="tb0"/>
                                        <ThicknessAnimation Duration="0:0:0.2"
                                                            To="12,16,12,0" 
                                                            Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="PART_ContentHost"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="LabelUp">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="16"
                                                         Storyboard.TargetProperty="FontSize"
                                                         Storyboard.TargetName="tb0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelDown">
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation Duration="0:0:0.1"
                                                         To="14"
                                                         Storyboard.TargetProperty="FontSize"
                                                         Storyboard.TargetName="tb0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="LabelGray">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        BeginTime="0:0:0.2"
                                                        To="#6f7174"
                                                        Storyboard.TargetName="tb0"
                                                        Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelBlack">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                    BeginTime="0:0:0.2"
                                                    To="Black"
                                                    Storyboard.TargetName="tb0"
                                                    Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"></VisualState>
                                <VisualState x:Name="InvalidFocused"></VisualState>
                                <VisualState x:Name="InvalidUnfocused"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Height="{TemplateBinding Height}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Style="{StaticResource prefix}"
                                   Visibility="Collapsed"
                                   Height="{Binding ElementName=inner_border,Path=ActualHeight}"
                                   Name="prefix"
                                   Content="{TemplateBinding PrefixContent}"/>
                            <Label Template="{StaticResource suffixLabel}"
                                   Style="{StaticResource prefix}"
                                   Grid.Column="2"
                                   Height="{Binding ElementName=inner_border,Path=ActualHeight}"
                                   Name="suffix"
                                   Visibility="Collapsed"
                                   Content="{TemplateBinding SuffixContent}"/>
                            <Grid Grid.Column="1" Panel.ZIndex="1000">
                                <Border CornerRadius="8"
                                        BorderThickness="4"
                                        Background="Transparent"
                                        Name="out_border"
                                        IsHitTestVisible="False"
                                        Opacity="{TemplateBinding OutBorderOpacity}"
                                        BorderBrush="#c2dbfe">
                                </Border>
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="6"
                                        IsHitTestVisible="True"
                                        Name="inner_border"
                                        Margin="4"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="grid">
                                        <TextBlock x:Name="tb0"
                                                   FontSize="16"
                                                   Margin="12,0"
                                                   Text="{TemplateBinding FloatingLabelText}" 
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Left"
                                                   IsHitTestVisible="False"
                                                   FontFamily="Microsoft YaHei UI"/>
                                        <TextBlock Margin="12,0"
                                                   Name="placeholder"
                                                   Foreground="{StaticResource placeHolder}"
                                                   Text="{TemplateBinding PlaceHolder}"
                                                   VerticalAlignment="Center"
                                                   Visibility="Collapsed"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   IsHitTestVisible="False"/>
                                        <ScrollViewer x:Name="PART_ContentHost" 
                                                      FontSize="{TemplateBinding FontSize}"
                                                      Margin="12,0"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Grid>


                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FloatingLabel" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="tb0" />
                            <Setter TargetName="placeholder" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="FloatingLabel" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="tb0" />
                            <Setter Property="Height" Value="45.3" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="placeholder"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Prefix" Value="True" />
                                <Condition Property="Suffix" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="prefix" />
                            <Setter Property="CornerRadius" Value="0,8,8,0" TargetName="out_border"/>
                            <Setter Property="CornerRadius" Value="0,6,6,0" TargetName="inner_border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Prefix" Value="False" />
                                <Condition Property="Suffix" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="suffix" />
                            <Setter Property="CornerRadius" Value="8,0,0,8" TargetName="out_border"/>
                            <Setter Property="CornerRadius" Value="6,0,0,6" TargetName="inner_border"/>
                        </MultiTrigger>                       
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Prefix" Value="True" />
                                <Condition Property="Suffix" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="prefix" />
                            <Setter Property="Visibility" Value="Visible" TargetName="suffix" />
                            <Setter Property="CornerRadius" Value="0" TargetName="out_border"/>
                            <Setter Property="CornerRadius" Value="0" TargetName="inner_border"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="inputToggleBtn" TargetType="ToggleButton">
        <Grid Background="Transparent">
            <Path Stretch="Uniform" HorizontalAlignment="Right" Width="10" Margin="16,0" Data="{StaticResource down}" Stroke="#595e63" Fill="#595e63" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type local:Select}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="45.3" />
        <Setter Property="IsDropDownOpen" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Select}">
                    <Grid Background="Transparent"
                          Height="{TemplateBinding Height}">
                        <ToggleButton ClickMode="Press"
                                      Template="{StaticResource inputToggleBtn}"
                                      IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="16,0"
                                          IsHitTestVisible="False"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left">
                        </ContentPresenter>
                        <local:Input x:Name="tb0"
                                     IsReadOnly="True"
                                     Height="{TemplateBinding Height}"
                                     Focusable="True"
                                     IsHitTestVisible="False"
                                     Margin="0"/>
                        <Popup x:Name="popup0"
                               Placement="Bottom"
                               Focusable="True"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid SnapsToDevicePixels="True"
                                  Margin="0,6"
                                  Width="{TemplateBinding ActualWidth}"
                                  MinWidth="{TemplateBinding MinWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        CornerRadius="6"
                                        Margin="3,0"
                                        BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#a0a0a0" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="White" />
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="0,3"
                                              MinWidth="20"
                                              VerticalScrollBarVisibility="Auto"
                                              SnapsToDevicePixels="True">
                                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained"
                                                IsItemsHost="True"
                                                Margin="1">
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" >
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Grid >
                                    <Border Background="{TemplateBinding Background}" Name="border" Margin="3,0"/>
                                    <ContentPresenter Margin="8,4"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e0e0e6"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="IsDropDownOpen" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:CheckBox}">
        <Setter Property="BorderWidth" Value="16"/>
        <Setter Property="BorderHeight" Value="16"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckBox}">
                    <BulletDecorator>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PressStates">
                                <VisualState x:Name="UncheckedPressing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="rect0"
                                                        Duration="0"
                                                        To="#e5e5e5"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="tb">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressing">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="#e5e5e5"
                                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="rect1"
                                                        Duration="0"
                                                        To="#e5e5e5"/>
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="NotPressing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="rect0"
                                                        Duration="0"
                                                        To="Transparent"/>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="rect1"
                                                        Duration="0"
                                                        To="Transparent"/>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="Transparent"
                                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="Transparent"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="Transparent"
                                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rect1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="#0d6efd"
                                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rect1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="Transparent"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        To="#c2dbfe"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle Stroke="#dfe3e7"
                                           Height="{TemplateBinding BorderHeight}"
                                           Width="{TemplateBinding BorderWidth}"
                                           StrokeThickness="0.67"
                                           Margin="4"
                                           x:Name="rect0"
                                           RadiusX="4"
                                           Fill="White"
                                           RadiusY="4"/>
                                <Border CornerRadius="6"
                                        Focusable="True"
                                        x:Name="border"
                                        Background="#0d6efd"
                                        BorderBrush="#c2dbfe"
                                        Padding="0"
                                        BorderThickness="4">
                                    <Grid>
                                        <Rectangle Fill="#0d6efd"
                                                   x:Name="rect1"
                                                   RadiusX="4"
                                                   RadiusY="4"
                                                   Width="{TemplateBinding BorderWidth}"
                                                   Height="{TemplateBinding BorderHeight}"/>
                                        <TextBlock Text="✓"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Foreground="White"
                                                   x:Name="tb"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                                  Margin="4,0"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  TextElement.FontSize="16"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:Thumb}"
           x:Key="thumb0">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="#0d6efd"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ellipse"
                                                        Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                        Duration="0:0:0.2"
                                                        To="#c2dbfe"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusSates">
                                <VisualState x:Name="Focus">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.2"
                                                        To="#c2dbfe"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocus">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.2"
                                                        To="Transparent"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="16"
                                BorderThickness="3"
                                BorderBrush="Transparent"
                                x:Name="border" >
                            <Ellipse Fill="{TemplateBinding Background}"
                                 Width="16"
                                 x:Name="ellipse"
                                 Height="16">
                            </Ellipse>

                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:Range}">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Range}">
                    <Grid x:Name="grid0"
                          Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border BorderThickness="1"
                                Margin="0"
                                Grid.Row="1"
                                CornerRadius="4"
                                Height="11"
                                x:Name="border0"
                                Background="#dee2e6"/>
                        <Track x:Name="PART_Track"
                               Grid.Row="1">
                            <Track.Thumb>
                                <local:Thumb Style="{StaticResource thumb0}"
                                             x:Name="thumb0"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="accordionButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Accordion">
        <Setter Property="BorderBrush" Value="#dee2e6"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Accordion">
                    <Grid MinHeight="{TemplateBinding MinHeight}"
                          Background="Transparent"
                          Focusable="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow"
                                           Height="0" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Expand">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="#cfe2ff"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="#aac5ec"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="1"
                                                         Storyboard.TargetName="scale"
                                                         Storyboard.TargetProperty="ScaleX"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="1"
                                                         Storyboard.TargetName="scale"
                                                         Storyboard.TargetProperty="ScaleY"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="-180"
                                                         Storyboard.TargetName="angle"
                                                         Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapse">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="Transparent"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="0"
                                                         Storyboard.TargetName="angle"
                                                         Storyboard.TargetProperty="Angle"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="1"
                                                         Storyboard.TargetName="scale"
                                                         Storyboard.TargetProperty="ScaleX"/>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="0"
                                                         Storyboard.TargetName="scale"
                                                         Storyboard.TargetProperty="ScaleY"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="BorderChange">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="#E5C2DBFE"
                                                        Storyboard.TargetName="BorderOut"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="#aac5ec"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BorderResume">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="Transparent"
                                                        Storyboard.TargetName="BorderOut"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="Transparent"
                                                        AutoReverse="True"
                                                        RepeatBehavior="Forever"
                                                        Storyboard.TargetName="BorderOut"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderOut"
                                BorderThickness="3"
                                CornerRadius="8,8,0,0"
                                BorderBrush="Transparent">
                            <Border x:Name="Border"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton IsChecked="{Binding IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                                  Grid.ColumnSpan="2"
                                                  Style="{StaticResource accordionButton}"/>
                                    <ContentPresenter Grid.Column="0"
                                                      ContentSource="Header"
                                                      VerticalAlignment="Center"
                                                      TextElement.FontSize="16"
                                                      Margin="20,0"
                                                      IsHitTestVisible="False"
                                                      RecognizesAccessKey="True" />
                                    <Path Grid.Column="1"
                                          Data="{StaticResource down}" 
                                          Name="path"
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"
                                          IsHitTestVisible="False" 
                                          Margin="0,0,8,0"
                                          Stretch="Uniform"
                                          RenderTransformOrigin="0.5,0.5"
                                          StrokeThickness="1"
                                          Stroke="#707375" >
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <RotateTransform Angle="0" x:Name="angle"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                        </Border>
                        <Border Grid.Row="1"
                                Name="Content"
                                BorderThickness="1"
                                Margin="4,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Tag="{Binding RelativeSource={RelativeSource Mode=Self},Path=Height}"
                                CornerRadius="0,0,5,5" >
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="0" x:Name="scale" />
                                    <TranslateTransform Y="-3" />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <ContentPresenter Margin="4" x:Name="present"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="6,6,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
